variables:
  PYTHON_EXE: "/usr/bin/python3.5"
  ODOO_SRC: "/home/gitlab-runner/odoo_src"

  PROJECT_MODULES: ""

  ODOO_VERSION: "12.0"
  ADDONS_PATH: "./env/enterprise/,./env/community/addons/"
  


stages:
  - lint
  - unittest
  - cleanup

flake8:
  tags:
    - flake8
  stage: lint
  except:
    - tags
  script:
  - flake8 --config=.flakerc .
  retry: 2
  
tests:
  tags:
    - eezeeit
    - odoo
  stage: unittest
  except:
    - tags
  artifacts:
    paths:
    - htmlcov/
  script:
  # Use short commit hash as database name
  - DBNAME=$(git rev-parse --short HEAD)
  - dropdb --if-exists $DBNAME
  - git submodule init && git submodule update
  - git --git-dir=$ODOO_SRC/odoo.git fetch origin *:*
  - git --git-dir=$ODOO_SRC/enterprise.git fetch origin *:*
  - virtualenv --python=$PYTHON_EXE env
  - source env/bin/activate
  - python -V
  - pip3 install -q coverage==4.0.3
  - pip3 install -q -r requirements.txt
  - git clone --quiet --branch=$ODOO_VERSION $ODOO_SRC/odoo.git env/community
  - rm -rf env/community/.git
  - pip3 install -q -r env/community/requirements.txt
  - git clone --quiet --branch=$ODOO_VERSION $ODOO_SRC/enterprise.git env/enterprise
  - rm -rf env/enterprise/.git
  - createdb --encoding=UTF8 --locale=en_US.UTF-8 --template=template0 $DBNAME
  - ./env/community/odoo-bin -d $DBNAME --addons-path=$ADDONS_PATH -i $PROJECT_MODULES --load-language=fr_BE,nl_BE --smtp=nosmtp --log-level=warn --stop-after-init
  - coverage run ./env/community/odoo-bin -d $DBNAME --addons-path=$ADDONS_PATH -i $PROJECT_MODULES --test-enable --log-level=warn --stop-after-init --smtp=nosmtp
  - coverage html
  - coverage report -i
  - grep pc_cov htmlcov/index.html | egrep -o "[0-9]+\%" | awk '{ print "covered " $1;}'
  - dropdb --if-exists $DBNAME
  retry: 2

cleanup_job:
  tags:
   - eezeeit
   - odoo
  stage: cleanup
  script:
  - DBNAME=$(git rev-parse --short HEAD)
  - dropdb --if-exists $DBNAME
  when: on_failure
  allow_failure: true
